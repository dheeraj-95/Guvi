Find the Fix:
1. Uncaught TypeError: Cannot read property of undefined
	- JavaScript TypeError is thrown when an operand or argument passed to a function is incompatible with the type expected by that operator or function. 
	- This error occurs in Chrome Browser when you read a property or call a method on an undefined object.
	
	Example :
		
		var test; // This is declared but not initialized
		console.log(test.city); //Uncaught TypeError: Cannot read property 'city' of undefined

		Handling this error:
			if (typeof(yourvariable) == 'undefined') {
	  			...
			}

2. TypeError: 'undefined' is not an object
	- The 'TypeError: 'undefined' is not an object' error occurs when a property is accessed or a method is called on an undefined object. This error is shown only on safari browser.
	
	Example :
		var test = undefined;
		if(test.length === 0){  // TypeError: 'undefined' is not an object (evaluating 'test.length')
			console.log('test is empty');
		}

3. TypeError: null is not an object
	- This is an error that occurs in Safari when you read a property or call a method on a null object.

	Example:
		var country = null;
		console.log(country.state); // TypeError: 'null' is not an object (evaluating 'country.state')

4. (unknown): Script error
	- The Script error occurs when an uncaught JavaScript error crosses domain boundaries in violation of the cross-origin policy.
	- For example, if you host your JavaScript code on a CDN, any uncaught errors (errors that bubble up to the window.onerror handler, instead of being caught in try-catch) will get reported as simply "Script error" instead of containing useful information